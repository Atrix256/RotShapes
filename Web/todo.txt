* make a web page that lets you draw in black / white and converts it to a rot encoded image
* make it show the pixels for the encoded rot image
* have it decode the rot image to show you what it looks like decoded.

* encode the source image data!

* separate code into multiple files?

* better paint tools in creator?
 * copy/paste (for multi frames)
 * load image (for source or encoded panel)

* multiple encoded frames in one image (for sprite sheets and animation)

* be able to animate the preview (result) for multi frame images

* for some reason, i can't seem to put alpha into the encoded texture ):  actually maybe not true... just cant fill with alpha?

* base image applied before the clicks
 * this makes it so image loading works, as well as undo

* is there any other place we should be doing bilinear sampling that we arent?

* find a better name than "rot shapes"

* if it takes too long to update the encoded image and result image while you draw, redraw on mouse up, undo, etc, but do it on a timeout of a few seconds after the last one of those events happened

=====
Later...
* a playground to investigate the properties of the image (scale, zoom, tint, anti aliasing, etc)
 * in webgl?
 * w/ animation
 * stroke and drop shadow

* a performance test playground vs a regular texture

* share pixel shader code to decode rot images from UV coordinates

* show shader code to decode rot images, based on options selected!

* a playground that lets you layer multiple tinted (and animated?) layers?

* see how this holds up to dxt compression (maybe jpg too?)

* sample library & research
 * text
 * asian text
 * google icons
 * animated icons
 * get pixel artists involved

=====FUTURE WORK=====

* other ways of converting images to the encoded image
   * like, instead of casting a ray, could do a cone and average distances found or something.
   * could use bressenham's algorithm if just casting a ray.

* look at being able to do AA in "squared distance space" somehow?

=====NOTES=====

? what should happen if result isn't square but source is.  Should it stretch?
 ! this is controlled by however the UV coordinates are set up.

? fill tool in encoder?
 ! there is no flood fill in javascript/html5 so would need to code it by hand.  image important should be good enough.

? we dont use the full range of the float (0-1) for each color channel, maybe we can improve that
